[{"content":"목표  블로그 진입점을 github pages의 루트가 아닌, 서브 path로 합니다.  ex. https://seungyeop-lee.github.io/test-blog/   하나의 repository에서 hugo의 소스파일과 생성된 html을 전부 관리합니다. github actions를 이용하여 push 할 경우, 자동으로 배포가 되게 합니다. utterances를 사용하여 댓글도 같은 repository에서 관리합니다.  실습전 확인 사항 주의 시간이 지남에 따라 내용이 정확하지 않을 수 있습니다. 화면이나 움직임이 다를경우 공식 문서를 참고해주세요.\n hugo github pages utterances  전제 조건  git 설치 github 계정 준비  실습 환경  macOS 환경 brew, vscode 사용  로컬에서 블로그 만들기 hugo 설치하기  brew를 이용하여 hugo를 설치합니다.  $ brew install hugo hugo의 버전을 확인하여 잘 설치되었는지 확인합니다.  $ hugo version 블로그 만들기  hugo를 이용하여 블로그를 만듭니다.  블로그의 이름으로 폴더가 만들어집니다.    $ hugo new site test-blog # test-blog 폴더가 생성된다. 테마 추가하기 이번 포스팅에서는 Stack 테마를 사용합니다. 다른 테마들은 Hugo Themes에서 찾아볼 수 있습니다.\n 만들어진 폴더로 이동합니다.  $ cd test-blog git 저장소를 초기화 합니다.  $ git init Stack 테마를 서브모듈로 추가합니다.  $ git submodule add https://github.com/CaiJimmy/hugo-theme-stack/ themes/hugo-theme-stack vscode를 실행시킵니다.  $ code . config.toml 파일에 아래의 코드를 추가합니다.  theme = \u0026#34;hugo-theme-stack\u0026#34; [params.defaultImage.opengraph] enabled = false 블로그를 로컬에서 가동 시킵니다.  $ hugo server 웹브라우저를 이용하여 http://localhost:1313/ 로 접속해봅니다.   블로그 가동 시 나오는 주소입니다.\nWeb Server is available at http://localhost:1313/ (bind address 127.0.0.1)\n  control + C를 누르면 기동이 중지됩니다.\n    github pages를 이용하여 배포하기 github repository 만들기  Repositories 탭에서 New 버튼을 누릅니다.  Repository name을 블로그 이름과 같게하고 Create repository 버튼을 누릅니다.  로컬에 만들어 놓은 블로그에 지금 만든 repository를 연결합니다.  만든 repository의 https에 쓰여있는 주소를 이용합니다.    $ cd test-blog $ git remote add origin https://github.com/seungyeop-lee/test-blog.git 자동배포 설정하기 GitHub Pages action과 Hugo setup를 이용한다.\n 로컬에 만들어 놓은 블로그 폴더에 github actions 파일을 만듭니다.  ex. .github/workflows/gh-pages.yml   github actions 파일에 아래의 코드를 추가합니다.  name:github pageson:push:branches:- main# Set a branch to deployjobs:deploy:runs-on:ubuntu-18.04steps:- uses:actions/checkout@v2with:submodules:true# Fetch Hugo themes (true OR recursive)fetch-depth:0# Fetch all history for .GitInfo and .Lastmod- name:Setup Hugouses:peaceiris/actions-hugo@v2with:hugo-version:\u0026#39;0.80.0\u0026#39;extended:true- name:Buildrun:hugo --minify- name:Deployuses:peaceiris/actions-gh-pages@v3with:github_token:${{ secrets.GITHUB_TOKEN }}publish_dir:./publicgithub pages 배포하기  만들어놓은 github repository에 push합니다.  $ cd test-blog $ git add --all $ git commit -m \u0026#34;first commit\u0026#34; $ git branch -M main $ git push -u origin main github repository의 Actions 탭으로 이동하여 자동 배포가 완료되었는지 확인합니다.  Settings 탭의 Options로 이동합니다.  GitHub Pages \u0026gt; Source에 아래와 같이 설정 후 Save 버튼을 누릅니다.  Branch: gh-pages / (root)    GitHub Pages로 다시 가보면 github pages의 주소가 보입니다.  접속해보면 배포된 블로그가 보입니다.  baseURL 수정하기 baseURL 수정이 되지 않아 css 및 js 파일이 제대로 적용되지 않은 문제를 해결합니다.\n 블로그 폴더의 config.toml파일의 baseURL을 생성된 github pages 주소로 변경합니다.  baseURL = \u0026#34;https://seungyeop-lee.github.io/test-blog/\u0026#34; github repository에 push하여 반영합니다.  $ cd test-blog $ git add --all $ git commit -m \u0026#34;change baseURL\u0026#34; $ git push  github repository의 Actions 탭에서 자동 배포가 완료되었는지 확인합니다.\n  배포된 블로그로 이동하여 확인합니다.\n  블로그 꾸미기 utterances로 댓글기능 추가하기 ","date":"2021-02-08T00:00:00Z","permalink":"https://seungyeop-lee.github.io/blog/post/hugo/hugo%EC%99%80-github-pages%EB%A1%9C-%EA%B0%84%EB%8B%A8%ED%9E%88-%EB%B8%94%EB%A1%9C%EA%B7%B8-%EB%A7%8C%EB%93%A4%EA%B8%B0/","title":"hugo와 github pages로 간단히 블로그 만들기"}]